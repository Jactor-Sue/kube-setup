---
# Source: kubeapps/templates/apprepository-jobs-bootstrap-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-bootstrap
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
data:
  apprepositories.yaml: |-
    apiVersion: kubeapps.com/v1alpha1
    kind: AppRepository
    metadata:
      name: stable
      namespace: kubeapps
      labels:
        app: kubeapps-internal-apprepository-controller
        chart: kubeapps-0.9.3
        release: kubeapps
        heritage: Tiller
    spec:
      type: helm
      url: https://kubernetes-charts.storage.googleapis.com
    ---
    
    apiVersion: kubeapps.com/v1alpha1
    kind: AppRepository
    metadata:
      name: incubator
      namespace: kubeapps
      labels:
        app: kubeapps-internal-apprepository-controller
        chart: kubeapps-0.9.3
        release: kubeapps
        heritage: Tiller
    spec:
      type: helm
      url: https://kubernetes-charts-incubator.storage.googleapis.com
    ---
    
    apiVersion: kubeapps.com/v1alpha1
    kind: AppRepository
    metadata:
      name: svc-cat
      namespace: kubeapps
      labels:
        app: kubeapps-internal-apprepository-controller
        chart: kubeapps-0.9.3
        release: kubeapps
        heritage: Tiller
    spec:
      type: helm
      url: https://svc-catalog-charts.storage.googleapis.com
    ---
    
    apiVersion: kubeapps.com/v1alpha1
    kind: AppRepository
    metadata:
      name: bitnami
      namespace: kubeapps
      labels:
        app: kubeapps-internal-apprepository-controller
        chart: kubeapps-0.9.3
        release: kubeapps
        heritage: Tiller
    spec:
      type: helm
      url: https://charts.bitnami.com/bitnami
    ---
    
---
# Source: kubeapps/templates/dashboard-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeapps-internal-dashboard-config
  namespace: kubeapps
  labels:
    app: kubeapps-internal-dashboard-config
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
data:
  vhost.conf: |-
    server {
      listen 8080;
      server_name _;

      gzip on;
      gzip_static  on;

      location / {
        try_files $uri /index.html;
      }
    }
  config.json: |-
    {
      "namespace": "kubeapps"
    }

---
# Source: kubeapps/templates/kubeapps-frontend-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeapps-frontend-config
  namespace: kubeapps
  labels:
    app: kubeapps-frontend-config
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
data:
  vhost.conf: |-
    # Retain the default nginx handling of requests without a "Connection" header
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    # Allow websocket connections
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    server {
      listen 8080;
      server_name _;

      location /healthz {
        access_log off;
        default_type text/plain;
        return 200 "healthy\n";
      }

      location /api/kube {
        rewrite /api/kube/(.*) /$1 break;
        rewrite /api/kube / break;
        proxy_pass https://kubernetes.default;
        # Disable buffering for log streaming
        proxy_buffering off;
        # Hide Www-Authenticate to prevent it triggering a basic auth prompt in
        # the browser with some clusters
        proxy_hide_header Www-Authenticate;
      }

      location /api/chartsvc {
        rewrite /api/chartsvc/(.*) /$1 break;
        rewrite /api/chartsvc / break;
        proxy_pass http://kubeapps-internal-chartsvc:8080;
      }

      location /api/tiller-deploy {
        rewrite /api/tiller-deploy/(.*) /$1 break;
        rewrite /api/tiller-deploy / break;
        proxy_pass http://kubeapps-internal-tiller-proxy:8080;
      }

      location / {
        proxy_pass http://kubeapps-internal-dashboard:8080;
      }
    }

---
# Source: kubeapps/templates/apprepository-jobs-bootstrap-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-bootstrap
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/apprepository-jobs-cleanup-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-apprepository-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/apprepository-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/kubeapps-jobs-upgrade-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-kubeapps-jobs-upgrade
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-kubeapps-jobs-upgrade
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/mongodb-jobs-cleanup-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-mongodb-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-mongodb-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/tiller-proxy-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
  labels:
    app: kubeapps-internal-tiller-proxy
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller

---
# Source: kubeapps/templates/apprepository-rbac.yaml
# Need a cluster role because client-go v5.0.1 does not support namespaced
# informers
# TODO: remove when we update to client-go v6.0.0
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeapps-internal-apprepository-controller
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-apprepository-controller
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
---
# Source: kubeapps/templates/apprepository-jobs-bootstrap-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-bootstrap
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - get
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-bootstrap
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-apprepository-jobs-bootstrap
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
---
# Source: kubeapps/templates/apprepository-jobs-cleanup-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-apprepository-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - list
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-apprepository-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-apprepository-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-apprepository-jobs-cleanup
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-apprepository-jobs-cleanup
  namespace: kubeapps
---
# Source: kubeapps/templates/kubeapps-jobs-upgrade-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-kubeapps-jobs-upgrade
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-kubeapps-jobs-upgrade
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - kubeapps.com
  resources:
  - apprepositories
  verbs:
  - get
  - create
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  verbs:
  - get
  - list
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-kubeapps-jobs-upgrade
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-kubeapps-jobs-upgrade
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-kubeapps-jobs-upgrade
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-kubeapps-jobs-upgrade
  namespace: kubeapps
---
# Source: kubeapps/templates/mongodb-jobs-cleanup-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-mongodb-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-mongodb-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-mongodb-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "-10"
  labels:
    app: kubeapps-internal-mongodb-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-mongodb-jobs-cleanup
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-mongodb-jobs-cleanup
  namespace: kubeapps
---
# Source: kubeapps/templates/tiller-proxy-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
  labels:
    app: kubeapps-internal-tiller-proxy
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
  labels:
    app: kubeapps-internal-tiller-proxy
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeapps-internal-tiller-proxy
subjects:
- kind: ServiceAccount
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
---
# Source: kubeapps/charts/mongodb/templates/svc-standalone.yaml

apiVersion: v1
kind: Service
metadata:
  name: kubeapps-mongodb
  namespace: kubeapps
  labels:
    app: mongodb
    chart: mongodb-4.8.4
    release: "kubeapps"
    heritage: "Tiller"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "kubeapps"

---
# Source: kubeapps/templates/chartsvc-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeapps-internal-chartsvc
  namespace: kubeapps
  labels:
    app: kubeapps
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: kubeapps-internal-chartsvc
    release: kubeapps

---
# Source: kubeapps/templates/dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeapps-internal-dashboard
  namespace: kubeapps
  labels:
    app: kubeapps
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: kubeapps-internal-dashboard
    release: kubeapps

---
# Source: kubeapps/templates/kubeapps-frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeapps
  namespace: kubeapps
  labels:
    app: kubeapps
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: kubeapps
    release: kubeapps

---
# Source: kubeapps/templates/tiller-proxy-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
  labels:
    app: kubeapps
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: kubeapps-internal-tiller-proxy
    release: kubeapps

---
# Source: kubeapps/charts/mongodb/templates/deployment-standalone.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubeapps-mongodb
  namespace: kubeapps
  labels:
    app: mongodb
    chart: mongodb-4.8.4
    release: "kubeapps"
    heritage: "Tiller"
spec:
  selector:
    matchLabels:
      app: mongodb
      release: "kubeapps"
  template:
    metadata:
      labels:
        app: mongodb
        release: "kubeapps"
        chart: mongodb-4.8.4
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
      - name: kubeapps-mongodb
        image: docker.io/bitnami/mongodb:4.0.3
        imagePullPolicy: "Always"
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kubeapps-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: ""
        - name: MONGODB_DATABASE
          value: ""
        - name: MONGODB_ENABLE_IPV6
          value: "yes"
        - name: MONGODB_EXTRA_FLAGS
          value: 
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 256Mi
          
      volumes:
      - name: data
        emptyDir: {}
---
# Source: kubeapps/templates/apprepository-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: kubeapps-internal-apprepository-controller
  namespace: kubeapps
  labels:
    app: kubeapps-internal-apprepository-controller
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeapps-internal-apprepository-controller
      release: kubeapps
  template:
    metadata:
      labels:
        app: kubeapps-internal-apprepository-controller
        release: kubeapps
    spec:
      serviceAccountName: kubeapps-internal-apprepository-controller
      containers:
      - name: controller
        image: docker.io/kubeapps/apprepository-controller:latest
        command:
        - /apprepository-controller
        args:
        - --logtostderr
        - --repo-sync-image=quay.io/helmpack/chart-repo:v1.0.1
        - --namespace=kubeapps
        - --mongo-url=kubeapps-mongodb
        - --mongo-secret-name=kubeapps-mongodb
        resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
            

---
# Source: kubeapps/templates/chartsvc-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: kubeapps-internal-chartsvc
  namespace: kubeapps
  labels:
    app: kubeapps-internal-chartsvc
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubeapps-internal-chartsvc
      release: kubeapps
  template:
    metadata:
      labels:
        app: kubeapps-internal-chartsvc
        release: kubeapps
    spec:
      containers:
      - name: chartsvc
        image: quay.io/helmpack/chartsvc:v1.0.1
        command:
        - /chartsvc
        args:
        - --mongo-user=root
        - --mongo-url=kubeapps-mongodb
        env:
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kubeapps-mongodb
              key: mongodb-root-password
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 0
          timeoutSeconds: 5
          
        resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
            

---
# Source: kubeapps/templates/dashboard-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: kubeapps-internal-dashboard
  namespace: kubeapps
  labels:
    app: kubeapps-internal-dashboard
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubeapps-internal-dashboard
      release: kubeapps
  template:
    metadata:
      annotations:
        checksum/config: cb36d727a7e666d9857a6746a83a43e49b5dc0520ec2a55e2240d0ce983d7c80
      labels:
        app: kubeapps-internal-dashboard
        release: kubeapps
    spec:
      containers:
      - name: dashboard
        image: docker.io/kubeapps/dashboard:latest
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 0
          timeoutSeconds: 5
          
        volumeMounts:
        - name: vhost
          mountPath: /opt/bitnami/nginx/conf/vhosts
        - name: config
          mountPath: /app/config.json
          subPath: config.json
        ports:
        - name: http
          containerPort: 8080
        resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
            
      volumes:
      - name: vhost
        configMap:
          name: kubeapps-internal-dashboard-config
          items:
          - key: vhost.conf
            path: vhost.conf
      - name: config
        configMap:
          name: kubeapps-internal-dashboard-config
          items:
          - key: config.json
            path: config.json

---
# Source: kubeapps/templates/kubeapps-frontend-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: kubeapps
  namespace: kubeapps
  labels:
    app: kubeapps
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeapps
      release: kubeapps
  template:
    metadata:
      annotations:
        checksum/config: 919d21909c5f82c7cde138f43c9f7cc6abff9d6251725281ed246db2ff60225c
      labels:
        app: kubeapps
        release: kubeapps
    spec:
      containers:
      - name: nginx
        image: docker.io/bitnami/nginx:1.14.0-r27
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 0
          timeoutSeconds: 5
          
        volumeMounts:
        - name: vhost
          mountPath: /opt/bitnami/nginx/conf/vhosts
        ports:
        - name: http
          containerPort: 8080
        resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
            
      volumes:
      - name: vhost
        configMap:
          name: kubeapps-frontend-config

---
# Source: kubeapps/templates/tiller-proxy-deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: kubeapps-internal-tiller-proxy
  namespace: kubeapps
  labels:
    app: kubeapps-internal-tiller-proxy
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubeapps-internal-tiller-proxy
      release: kubeapps
  template:
    metadata:
      labels:
        app: kubeapps-internal-tiller-proxy
        release: kubeapps
    spec:
      serviceAccountName: kubeapps-internal-tiller-proxy
      containers:
      - name: proxy
        image: docker.io/kubeapps/tiller-proxy:latest
        command:
        - /proxy
        args:
        - --host=tiller-deploy.kube-system:44134
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 32Mi
            

---
# Source: kubeapps/templates/apprepository-jobs-bootstrap.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeapps-internal-apprepository-jobs-bootstrap
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app: kubeapps-internal-apprepository-jobs-bootstrap
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  template:
    metadata:
      labels:
        app: kubeapps-internal-apprepository-jobs-bootstrap
        release: kubeapps
    spec:
      containers:
      - name: kubectl
        image: docker.io/lachlanevenson/k8s-kubectl:v1.9.9
        command:
        - kubectl
        - apply
        - -f
        - /tmp/apprepositories/apprepositories.yaml
        volumeMounts:
        - mountPath: /tmp/apprepositories
          name: apprepositories-config
      volumes:
      - name: apprepositories-config
        configMap:
          name: kubeapps-internal-apprepository-jobs-bootstrap
      restartPolicy: OnFailure
      serviceAccountName: kubeapps-internal-apprepository-jobs-bootstrap

---
# Source: kubeapps/templates/apprepository-jobs-cleanup.yaml
# Clean up the AppRepository resources used by this Kubeapps instance
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeapps-internal-apprepository-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app: kubeapps-internal-apprepository-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  template:
    metadata:
      labels:
        app: kubeapps-internal-apprepository-jobs-cleanup
        release: kubeapps
    spec:
      containers:
      - name: kubectl
        image: docker.io/lachlanevenson/k8s-kubectl:v1.9.9
        command:
        - kubectl
        - delete
        - apprepositories.kubeapps.com
        - -n
        - kubeapps
        - --all
      restartPolicy: OnFailure
      serviceAccountName: kubeapps-internal-apprepository-jobs-cleanup

---
# Source: kubeapps/templates/kubeapps-jobs-upgrade.yaml
# This is a temporary upgrade hook for installating a version prior
# to 0.6 since the process of creating the mongodb secret changed
# It should be removed at https://github.com/kubeapps/kubeapps/issues/699
# This Job creates the mongodb credentials secret if it doesn't exists
# and it resyncs the existing apprepositories.
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeapps-internal-kubeapps-jobs-upgrade
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app: kubeapps-internal-kubeapps-jobs-upgrade
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  template:
    metadata:
      labels:
        app: kubeapps-internal-kubeapps-jobs-upgrade
        release: kubeapps
    spec:
      containers:
      - name: kubectl
        image: docker.io/lachlanevenson/k8s-kubectl:v1.9.9
        command:
        - /bin/sh
        - -c
        args:
        - |-
            # Recreate MongoDB secret if doesn't exists (happens for chart versions < 0.5.2)
            if kubectl get secrets -n kubeapps kubeapps-mongodb; then
              # Secret exists, do nothing
              echo "MongoDB secret found"
            else
              # Secret doesn't exists, create it and restart mongodb
              kubectl create secret generic -n kubeapps kubeapps-mongodb --from-literal mongodb-root-password=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`
              kubectl delete pods -n kubeapps -l app=mongodb,release=kubeapps
              kubectl rollout status -n kubeapps deployment/kubeapps-mongodb
              # Re-sync repositories reseting resyncRequests
              kubectl get apprepositories -o=name -n kubeapps kubeapps | xargs kubectl patch $1 -n kubeapps --type merge -p '{ "spec": { "resyncRequests": 0 } }'
            fi
      restartPolicy: OnFailure
      serviceAccountName: kubeapps-internal-kubeapps-jobs-upgrade

---
# Source: kubeapps/templates/mongodb-jobs-cleanup.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kubeapps-internal-mongodb-jobs-cleanup
  namespace: kubeapps
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: hook-succeeded
  labels:
    app: kubeapps-internal-mongodb-jobs-cleanup
    chart: kubeapps-0.9.3
    release: kubeapps
    heritage: Tiller
spec:
  template:
    metadata:
      labels:
        app: kubeapps-internal-mongodb-jobs-cleanup
        release: kubeapps
    spec:
      containers:
      - name: kubectl
        image: docker.io/lachlanevenson/k8s-kubectl:v1.9.9
        command:
        - /bin/sh
        args:
        - -c
        - "kubectl delete secret -n kubeapps kubeapps-mongodb || true"
      restartPolicy: OnFailure
      serviceAccountName: kubeapps-internal-mongodb-jobs-cleanup

---
# Source: kubeapps/charts/mongodb/templates/configmap.yaml

---
# Source: kubeapps/charts/mongodb/templates/headless-svc-rs.yaml

---
# Source: kubeapps/charts/mongodb/templates/initialization-configmap.yaml

---
# Source: kubeapps/charts/mongodb/templates/poddisruptionbudget-arbiter-rs.yaml

---
# Source: kubeapps/charts/mongodb/templates/poddisruptionbudget-primary-rs.yaml

---
# Source: kubeapps/charts/mongodb/templates/poddisruptionbudget-secondary-rs.yaml


---
# Source: kubeapps/charts/mongodb/templates/pvc-standalone.yaml

---
# Source: kubeapps/charts/mongodb/templates/secrets.yaml


---
# Source: kubeapps/charts/mongodb/templates/statefulset-arbiter-rs.yaml


---
# Source: kubeapps/charts/mongodb/templates/statefulset-primary-rs.yaml


---
# Source: kubeapps/charts/mongodb/templates/statefulset-secondary-rs.yaml


---
# Source: kubeapps/charts/mongodb/templates/svc-primary-rs.yaml


---
# Source: kubeapps/templates/ingress.yaml


---
# Source: kubeapps/templates/tiller-proxy-secret.yaml
# The tls ca certificate is only required when tls.verify is set to true, we fail otherwise.
---
# Source: kubeapps/templates/tls-secrets.yaml


