---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flax
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-flax-ds
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        app: flaxd
    spec:
      serviceAccountName: flax
      containers:
        - name: flaxd
          image: johnlin/flaxd
          volumeMounts:
            - name: ovsdbsock
              mountPath: /var/run/openvswitch/db.sock
            - name: netconf
              mountPath: /etc/cni/net.d/linen.conflist
      volumes:
        - hostPath:
           path: /var/run/openvswitch/db.sock
          name: ovsdbsock
        - hostPath:
           path: /etc/cni/net.d/linen.conflist
          name: netconf---
# Create the clusterrole and clusterrolebinding:
# $ kubectl create -f flaxd-rbac.yml
# Create the pod using the same namespace used by the flax serviceaccount:
# $ kubectl create --namespace kube-system -f flaxd.yml
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flax
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: flax
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flax
subjects:
- kind: ServiceAccount
  name: flax
  namespace: kube-system---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ryu-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: ryu
    spec:
      hostNetwork: true
      containers:
      - name: ryu
        image: osrg/ryu
        args:
          - ryu-manager
          - ./ryu/ryu/app/simple_switch_13.py
        ports:
        - containerPort: 6653
          name: openflow
      nodeSelector:
        nodetype: master
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: onos-deployment
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: onos
    spec:
      hostNetwork: true
      containers:
      - name: onos
        image: onosproject/onos:1.10.3
        env:
        - name: ONOS_APPS
          value: "drivers,openflow,fwd,proxyarp"
        args:
          - start
        ports:
        - containerPort: 6653
          name: openflow
        - containerPort: 6640
          name: ovsdb
        - containerPort: 8181
          name: gui
        - containerPort: 8101
          name: onos-cli
        - containerPort: 9876
          name: cluster
      nodeSelector:
        nodetype: master
