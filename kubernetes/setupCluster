################################################################
##
## Copyright (2018, ) Institute of Software, CAS
## @author wuheng@otcaix.iscas.ac.cn
## @date   2018-8-14
##
################################################################

version="v1.12.1"
podcidr="192.168.0.0/16"
network="Calico"
toolurl="http://118.190.96.247/tools/"

function getKubeTools()
{
  rm -rf tools.txt
  wget $toolurl/tools.txt
  for name in $(cat tools.txt)
  do
    iname=${name%-*}
    check $iname
    if [[ $? = "1" ]]
    then
      continue
    fi

    wget $toolurl/$name
    mv -f $name /usr/bin/$iname
    chmod 777 /usr/bin/$iname
  done
  rm -rf tools.txt
}

function check()
{
   res=$(ls /usr/bin/ | grep $1 | grep -v grep)
   if [[ -z $res ]]
   then
     return 0
   else
     return 1
   fi
}

function setupCluster()
{
  swapoff -a
  echo "1" > /proc/sys/net/bridge/bridge-nf-call-iptables
  rm -rf $HOME/.kube
  systemctl daemon-reload
  systemctl start kubelet
  systemctl stop firewalld
  systemctl disable firewalld
  
  echo "kubeadm init --kubernetes-version=$version --pod-network-cidr=$podcidr --token-ttl=0 --ignore-preflight-errors=SystemVerification"
  kubeadm init --kubernetes-version=$version --pod-network-cidr=$podcidr --token-ttl=0 --ignore-preflight-errors=SystemVerification 
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

  kubectl taint nodes --all node-role.kubernetes.io/master-
  iptables -P FORWARD ACCEPT
}

function setupCalico()
{
  while true
  do
    stat=`kubectl get po --all-namespaces | grep kube-apiserver | awk '{print $4}'`
    if [ "$stat" = "Running" ]
    then
      break
    fi
    sleep 5
  done
  
  kubectl create -f yamls/calicorole.yaml
  kubectl create -f yamls/netcalico.yaml
}

bash ../commons/getImages images.conf
getKubeTools
setupCluster
setup$Network
